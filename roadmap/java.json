[
  {
    "id": 1,
    "icon": "üìò",
    "title": "Core Java Basics",
    "level": "beginner",
    "description": [
      "Learn about variables, expressions, and primitive types",
      "Understand casting, floating point precision, char and boolean",
      "Master operators, operands, and expressions",
      "Control program flow with switch, for, while, and do-while",
      "Explore classes, objects, fields, and methods",
      "Handle input, parsing values, and exception handling",
      "Organize code with packages, imports, and enums",
      "Introduction to arrays, autoboxing, and unboxing"
    ],
    "topics": [
      "Variables",
      "Primitive Types",
      "Casting",
      "Operators",
      "Control Flow",
      "Classes & Objects",
      "Exception Handling",
      "Packages & Imports",
      "Enums",
      "Arrays",
      "Autoboxing & Unboxing"
    ]
  },
  {
    "id": 2,
    "icon": "üöÄ",
    "title": "Advanced Java Concepts",
    "level": "beginner",
    "description": [
      "Master Java Generics including classes, methods, and wildcards",
      "Understand Comparable vs Comparator for sorting",
      "Learn about nested, inner, local, and anonymous classes",
      "Handle files with exception handling and buffered readers",
      "Dive into exception hierarchy and create custom exceptions"
    ],
    "topics": [
      "Generics",
      "Comparable vs Comparator",
      "Nested Classes",
      "File Processing",
      "Exception Handling"
    ]
  },
  {
    "id": 3,
    "icon": "üìö",
    "title": "Collections",
    "level": "beginner",
    "description": [
      "Learn Java Collection interfaces and classes",
      "Understand lists, sets, maps, and their variations",
      "Explore HashMap internals and compare with Hashtable",
      "Understand concurrent collections and their benefits",
      "Work with CopyOnWrite collections for thread safety"
    ],
    "topics": [
      "List & ArrayList",
      "LinkedList",
      "Set & HashSet",
      "TreeSet",
      "Map & HashMap",
      "Concurrent Collections",
      "CopyOnWrite Collections"
    ]
  },
  {
    "id": 4,
    "icon": "‚ö°",
    "title": "Java 8",
    "level": "intermediate",
    "description": [
      "Learn Lambda expressions and functional interfaces",
      "Master Stream API for data processing",
      "Work with method references and default/static methods in interfaces",
      "Explore new Date & Time API (Joda)",
      "Understand parallel streams and performance implications"
    ],
    "topics": [
      "Lambdas",
      "Functional Interfaces",
      "Streams API",
      "Parallel Streams",
      "Method References",
      "Date & Time API"
    ]
  },
  {
    "id": 5,
    "icon": "üåü",
    "title": "Java 17",
    "level": "intermediate",
    "description": [
      "Learn about sealed classes and their use cases",
      "Understand records for data-centric classes",
      "Use text blocks for multi-line strings"
    ],
    "topics": [
      "Sealed Classes",
      "Records",
      "Text Blocks"
    ]
  },
  {
    "id": 6,
    "icon": "üóÑÔ∏è",
    "title": "JDBC",
    "level": "java",
    "description": [
      "Understand JDBC architecture and API",
      "Learn driver types and their differences",
      "Follow standard steps to build a JDBC application",
      "Perform CRUD operations using JDBC",
      "Work with MySQL database and IDE integration"
    ],
    "topics": [
      "JDBC Architecture",
      "JDBC Drivers (Type 1‚Äì5)",
      "CRUD Operations",
      "Dynamic SQL",
      "JDBC Standards",
      "MySQL Integration"
    ]
  },
  {
    "id": 7,
    "icon": "‚öôÔ∏è",
    "title": "JVM Internals",
    "level": "intermediate",
    "description": [
      "Explore Java Memory Model and class loading process",
      "Understand stack, heap, and execution engine",
      "Learn garbage collection algorithms and memory management",
      "Monitor JVM performance with tools like VisualVM",
      "Work with heap dumps and analyze memory usage"
    ],
    "topics": [
      "Java Memory Model",
      "Class Loader",
      "Stack & Heap",
      "Garbage Collection",
      "Metaspace & PermGen",
      "Heap Dumps & Profiling"
    ]
  },
  {
    "id": 8,
    "icon": "üßµ",
    "title": "Concurrency",
    "level": "advanced",
    "description": [
      "Learn thread basics and lifecycle",
      "Understand memory consistency, atomicity, and synchronization",
      "Avoid deadlocks using wait/notify mechanisms",
      "Use ExecutorService and thread pools",
      "Handle concurrency with collections and queues"
    ],
    "topics": [
      "Thread Basics",
      "Synchronization",
      "Deadlocks",
      "Locks & ExecutorService",
      "ForkJoinPool",
      "Concurrent Collections"
    ]
  },
  {
    "id": 9,
    "icon": "üîÄ",
    "title": "Multithreading",
    "level": "advanced",
    "description": [
      "Understand starting threads with Runnable",
      "Work with synchronized methods and locks",
      "Learn about ThreadLocal and immutability",
      "Explore Executor framework and Callable/Future",
      "Handle concurrency challenges like deadlocks and race conditions"
    ],
    "topics": [
      "Runnable & Threads",
      "Locks & Synchronization",
      "ThreadLocal",
      "Executor Framework",
      "Fork-Join Framework",
      "CompletableFuture"
    ]
  },
  {
    "id": 10,
    "icon": "üé®",
    "title": "Design Patterns",
    "level": "advanced",
    "description": [
      "Learn creational patterns like Singleton and Factory",
      "Understand structural patterns like Adapter and Proxy",
      "Explore behavioral patterns like Observer and Strategy",
      "Apply design principles to real-world problems"
    ],
    "topics": [
      "Singleton",
      "Factory & Builder",
      "Adapter & Proxy",
      "Observer & Strategy",
      "Template Method",
      "Visitor"
    ]
  }
,
  {
    "id": 11,
    "icon": "üèóÔ∏è",
    "title": "OOPS",
    "level": "beginner",
    "description": [
      "Understand the fundamentals of classes and objects",
      "Work with getters, setters, and POJOs",
      "Differentiate between reference, object, instance, and class",
      "Explore static vs instance variables",
      "Learn method overloading and overriding",
      "Understand key OOP principles: encapsulation, inheritance, polymorphism, abstraction",
      "Apply SOLID principles in design"
    ],
    "topics": [
      "Classes & Objects",
      "POJO",
      "Static vs Instance",
      "Overloading vs Overriding",
      "Encapsulation",
      "Polymorphism",
      "SOLID Principles"
    ]
  },
  {
    "id": 12,
    "icon": "‚úâÔ∏è",
    "title": "Java Messaging",
    "level": "advanced",
    "description": [
      "Learn messaging models like Publish/Subscribe and Request/Reply",
      "Understand queues, topics, and partitions",
      "Work with Kafka, RabbitMQ, and ActiveMQ",
      "Explore brokers, consumer groups, and retention policies",
      "Implement messaging using JMS API"
    ],
    "topics": [
      "Publish/Subscribe",
      "Request/Reply",
      "Kafka",
      "RabbitMQ",
      "ActiveMQ",
      "JMS API"
    ]
  },
  {
    "id": 13,
    "icon": "üß™",
    "title": "JUnit & Mockito",
    "level": "intermediate",
    "description": [
      "Understand unit testing with JUnit",
      "Learn mocking with Mockito",
      "Work with stubs, spies, and annotations",
      "Test exceptions, performance, and private methods",
      "Integrate PowerMock for advanced scenarios"
    ],
    "topics": [
      "JUnit Basics",
      "Mockito",
      "Stubs & Spies",
      "PowerMock",
      "Hamcrest Matchers",
      "Testing Exceptions"
    ]
  },
  {
    "id": 14,
    "icon": "‚ö°",
    "title": "Performance Tuning",
    "level": "advanced",
    "description": [
      "Understand garbage collection algorithms and tuning",
      "Monitor and analyze GC logs",
      "Optimize JVM parameters for performance",
      "Resolve thread contention and improve concurrency",
      "Reduce memory leaks and optimize SQL/database interactions"
    ],
    "topics": [
      "GC Algorithms",
      "Heap Tuning",
      "Thread Optimization",
      "Concurrency Utilities",
      "JDBC Optimization",
      "Memory Leak Prevention"
    ]
  },
  {
    "id": 15,
    "icon": "üóÇÔ∏è",
    "title": "Hibernate",
    "level": "advanced",
    "description": [
      "Learn Hibernate architecture and ORM concepts",
      "Work with session and entity lifecycle",
      "Master HQL, Criteria API, and Named Queries",
      "Understand caching and fetching strategies",
      "Map associations and inheritance",
      "Optimize Hibernate performance with batch processing and versioning"
    ],
    "topics": [
      "Hibernate Architecture",
      "Entity Lifecycle",
      "HQL & Criteria API",
      "Caching",
      "Associations",
      "Inheritance Mapping",
      "Batch Processing"
    ]
  }
]
